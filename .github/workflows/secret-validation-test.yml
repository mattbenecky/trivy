# Run Trivy secret scan to validate whether specified secret detected successfully
# Secret test data located in trivy/pkg/fanal/secret/testdata
name: 'Secret Scan Validation Test'

on:
  # Secret detection tests triggered by manually running this workflow
  workflow_dispatch:

    # Input secret Rule ID to test
    inputs:
      secretType:
        description: 'Specify type of secret to validate'
        required: true
        default: "['aws-access-key-id','aws-secret-access-key','aws-account-id','azure-client-secret','github-pat']"

jobs:
  
  validate-secret:
    runs-on: ubuntu-latest
    name: ${{ matrix.secretType }} Test
    strategy:
      fail-fast: false
      matrix:
        secretType: ${{ fromJSON(github.event.inputs.secretType) }}

    steps:

      # Copy test data to runner for secret scanning
      - shell: bash
        run: git clone https://github.com/aquasecurity/trivy.git
        name: 'Copy Test Data'

      # Display test data in runner directory (GITHUB_WORKSPACE)
      - shell: bash
        run: |
          echo ${{ matrix.secretType }}
          echo "Test Data " = ${GITHUB_WORKSPACE}/trivy/pkg/fanal/secret/testdata        
          mv ${GITHUB_WORKSPACE}/trivy/pkg/fanal/secret/testdata testdata
          ls -a ${GITHUB_WORKSPACE}/testdata
        name: 'Display Test Data'

      # Run Trivy in file system mode and scan test data for secrets
      - uses: aquasecurity/trivy-action@master
        name: 'Run Trivy Secret Scan'
        with:
          scan-type: 'fs'
          security-checks: 'secret'
          format: 'json'
          output: 'output.json'

      # Display Trivy secret scan results
      - shell: bash
        run: |
          echo Test Results = ${GITHUB_WORKSPACE}/output.json
          cat output.json
        name: 'Display Scan Results'

      # Check Trivy secret scan results for specified secret Rule ID        
      - shell: bash
        name: 'Secret Validation'
        run: |       
          if grep -q ${{ matrix.secretType }} output.json
          then
            echo ${{ matrix.secretType }} PASS
          else
            echo ${{ matrix.secretType }} FAIL
            exit 1
          fi